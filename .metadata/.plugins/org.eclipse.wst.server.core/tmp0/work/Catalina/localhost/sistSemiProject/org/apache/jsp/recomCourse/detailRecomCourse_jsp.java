/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-19 23:44:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.recomCourse;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.dao.MemberDao;
import java.util.ArrayList;
import data.dto.TourSpotDto;
import data.dto.CourseDto;
import java.util.List;
import data.dao.TourSpotDao;
import data.dao.RecomCourseDao;

public final class detailRecomCourse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("data.dao.MemberDao");
    _jspx_imports_classes.add("data.dao.RecomCourseDao");
    _jspx_imports_classes.add("data.dto.TourSpotDto");
    _jspx_imports_classes.add("data.dto.CourseDto");
    _jspx_imports_classes.add("data.dao.TourSpotDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

request.setCharacterEncoding("utf-8");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Bagel+Fat+One&family=Dongle:wght@300&family=East+Sea+Dokdo&family=Gamja+Flower&family=Gowun+Dodum&family=Nanum+Gothic+Coding&family=Nanum+Pen+Script&family=Orbit&display=swap\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\n");
      out.write("	href=\"//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\" />\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("	src=\"//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js\"></script>\n");
      out.write("\n");
      out.write("\n");

// dao 호출
RecomCourseDao RecomCourseDao = new RecomCourseDao();
TourSpotDao TourSpotDao = new TourSpotDao();

String name = request.getParameter("name");

// name값을 받아서 recomCourse 출력
List<CourseDto> recomlist = RecomCourseDao.getRecomCourseName(name);

System.out.println(name);

// 받아온 CourseDto의 name값을 이용하여 tour_seq 가져오기 (RecomCourse table)
// 가져온 tour_ser를 이용하여 TourSpotDto의 자료 가져오기 (RecomCourse table -> TourSpot table)
List<TourSpotDto> spotlist = new ArrayList<TourSpotDto>();

for (int i = 0; i < recomlist.size(); i++) {
	String tour_seq = recomlist.get(i).getTour_seq(); // 순차적으로 name에 해당하는 Tour_seq의 값을 받아온다. 
	TourSpotDto tdto = TourSpotDao.getdata(tour_seq);
	spotlist.add(tdto);

}

String loginok=(String)session.getAttribute("loginok");
String myid=(String)session.getAttribute("myid");

MemberDao MemberDao = new MemberDao();

String root=request.getContextPath();


      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("@import url(//fonts.googleapis.com/earlyaccess/jejugothic.css);\n");
      out.write("\n");
      out.write("body * { \n");
      out.write(" font-family: 'Jeju Gothic', sans-serif;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write(".slick {\n");
      out.write("	margin-bottom: 20px;\n");
      out.write("}\n");
      out.write("/*이전,다음*/\n");
      out.write(".slick-arrow {\n");
      out.write("	position: absolute;\n");
      out.write("	top: 50%;\n");
      out.write("	transform: translateY(-50%);\n");
      out.write("	z-index: 5\n");
      out.write("}\n");
      out.write("\n");
      out.write(".slick-prev {\n");
      out.write("	left: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".slick-next {\n");
      out.write("	right: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".slick-list {\n");
      out.write("	\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list-box {\n");
      out.write("	position: relative;\n");
      out.write("	margin: 0 5px;\n");
      out.write("	display:flex;\n");
      out.write("	flex-direction: column;\n");
      out.write("    justify-content:center;\n");
      out.write("    align-items:center;\n");
      out.write("    padding: 10px 10px 10px 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".image-box1 {\n");
      out.write("	border-radius: 10px;\n");
      out.write("	overflow: hidden;\n");
      out.write("	width: 100%;\n");
      out.write("	aspect-ratio: 1;\n");
      out.write("	position: relative;\n");
      out.write("	display: inline-block;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".list-box img {\n");
      out.write("	width: 100%;\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".slick-prev, .slick-next {\n");
      out.write("	background: transparent;\n");
      out.write("	border: 0\n");
      out.write("}\n");
      out.write("\n");
      out.write(".slick-prev:after {\n");
      out.write("	content: '';\n");
      out.write("	width: 50px;\n");
      out.write("	height: 50px;\n");
      out.write("	display: block;\n");
      out.write("	background-image: url(");
      out.print(root);
      out.write("/jeju/left.svg);\n");
      out.write("	background-size: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".slick-next:after {\n");
      out.write("	content: '';\n");
      out.write("	width: 50px;\n");
      out.write("	height: 50px;\n");
      out.write("	display: block;\n");
      out.write("	background-image: url(");
      out.print(root);
      out.write("/jeju/left.svg);\n");
      out.write("	background-size: 100%;\n");
      out.write("	transform: scaleX(-1);\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write(".photoname{\n");
      out.write("	width: 100%;\n");
      out.write("	text-align: center;\n");
      out.write("	margin-bottom: 0;\n");
      out.write("	position: absolute;\n");
      out.write("	left: 50%;\n");
      out.write("	top: 50%;\n");
      out.write("	transform: translate(-50%, -50%);\n");
      out.write("	text-shadow: 2px 2px 2px gray;\n");
      out.write("	font-size: 20px;\n");
      out.write("	color: #fff;\n");
      out.write("	font-weight: bold;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".box-style {\n");
      out.write("	padding: 0 20px 20px;\n");
      out.write("	box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".box-in-style {\n");
      out.write("	background: #fff;\n");
      out.write("	border-radius: 10px;\n");
      out.write("	box-shadow: 2px 3px 9px 3px rgba(87, 88, 89, .25);\n");
      out.write("	padding: 10px 20px;\n");
      out.write("	box-sizing: border-box;\n");
      out.write("	border: 2px solid #1976D2;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title {\n");
      out.write("	display: flex;\n");
      out.write("	flex-direction: column;\n");
      out.write("	align-items: center;\n");
      out.write("	justify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title>div {\n");
      out.write("	display: flex;\n");
      out.write("	align-items: center;\n");
      out.write("	justify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.title>div p {\n");
      out.write("	margin-bottom: 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.tnum {\n");
      out.write("	border-radius: 100px;\n");
      out.write("	background-color: #1976D2;\n");
      out.write("	width: 20px;\n");
      out.write("	height: 20px;\n");
      out.write("	margin-right: 5px;\n");
      out.write("	display: flex;\n");
      out.write("	align-items: center;\n");
      out.write("	justify-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.detailbg {\n");
      out.write("	width: 1200px;\n");
      out.write("	background-color: #cfcfcf;\n");
      out.write("	margin: 0 auto;\n");
      out.write("	border-radius:20px; \n");
      out.write("}\n");
      out.write("\n");
      out.write("div.taddr {\n");
      out.write("	display: flex;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".img-box {\n");
      out.write("	width: 500px;\n");
      out.write("	height: 500px;\n");
      out.write("	background: #eee;\n");
      out.write("	border-radius: 10px;\n");
      out.write("	overflow: hideen;\n");
      out.write("	margin: 30px auto;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".img-boxclick{\n");
      out.write("	background-color: blue;\n");
      out.write("	opacity: 0.4;\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write(".img-box>img {\n");
      out.write("	width: 100%;\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-box {\n");
      out.write("	display: flex;\n");
      out.write("	flex-wrap: wrap;\n");
      out.write("	align-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".tag-box>p {\n");
      out.write("	margin: 0 8px 0 0;\n");
      out.write("	font-size: 16px;\n");
      out.write("	color: #000;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.text-box, div.tag-box {\n");
      out.write("	padding: 1 20px 10px 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.container {\n");
      out.write("	align-content: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.backgound {\n");
      out.write("	width: 100%;\n");
      out.write("	top: 100px;\n");
      out.write("	left: 200px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".heartBtn {\n");
      out.write("	position: fixed;\n");
      out.write("	right: 10%;\n");
      out.write("	bottom: 10%;\n");
      out.write("	border: transparent;\n");
      out.write("	background-color: transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".bi-heart {\n");
      out.write("	font-size: 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".bi-heart-fill {\n");
      out.write("	font-size: 30px;\n");
      out.write("	color: red;	\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.bg{\n");
      out.write("	margin: 100px 100px 100px 100px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".t-order{\n");
      out.write("	border: 2px solid #1976D2;\n");
      out.write("	background-color: white;\n");
      out.write("	border-radius: 30px;\n");
      out.write("	width: 30px;\n");
      out.write("	height: 30px;\n");
      out.write("	font-size: 16px;\n");
      out.write("	color: black;\n");
      out.write("	display: flex;\n");
      out.write("	justify-content: center;\n");
      out.write("	margin: 0 auto;\n");
      out.write("	margin-bottom: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<div class=\"likes\">\n");
      out.write("		<button class=\"heartBtn\" name=\"");
      out.print(name);
      out.write("\">\n");
      out.write("			<i class=\"bi bi-heart\"></i>\n");
      out.write("		</button>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<div class=\"bg\">\n");
      out.write("		<div class=\"detailbg\">\n");
      out.write("\n");
      out.write("			<div class=\"slick\">\n");
      out.write("				");

				for (int i=0;i<spotlist.size();i++) {
					TourSpotDto TourSpotDto = spotlist.get(i);
					//System.out.println(dto.getName());
				
      out.write("\n");
      out.write("				<div class='list-box'>\n");
      out.write("					<div class=\"t-order\">\n");
      out.write("						<p>");
      out.print(i+1 );
      out.write("</p>\n");
      out.write("					</div>					\n");
      out.write("					<div class='image-box1'>\n");
      out.write("						<img alt=\"\" src=\"");
      out.print(root );
      out.write("/jeju/");
      out.print(TourSpotDto.getPhoto());
      out.write("\" class=\"spotimg\" seq=\"");
      out.print(TourSpotDto.getSeq());
      out.write("\" num=");
      out.print(i+1 );
      out.write(">\n");
      out.write("						<p class=\"photoname\">");
      out.print(TourSpotDto.getName());
      out.write("</p>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				");

				}
				
      out.write("\n");
      out.write("			</div>\n");

				for (int i = 0; i < 1; i++) {
					TourSpotDto TourSpotDto = spotlist.get(i);
					//System.out.println(dto.getName());
				
      out.write("\n");
      out.write("			<div class='box-style'>\n");
      out.write("				<div class='box-in-style' id=\"detailcontent\">\n");
      out.write("					<div class=\"title\">\n");
      out.write("						<div>\n");
      out.write("							<div class=\"tnum\">\n");
      out.write("								<p>");
      out.print(i+1 );
      out.write("</p>\n");
      out.write("							</div>\n");
      out.write("							<p>");
      out.print(TourSpotDto.getName() );
      out.write("</p>\n");
      out.write("						</div>\n");
      out.write("						<div>\n");
      out.write("							<div class=\"taddr\">\n");
      out.write("								<p>주소: ");
      out.print(TourSpotDto.getAddr() );
      out.write("</p>\n");
      out.write("								&nbsp;\n");
      out.write("								<p>|</p>\n");
      out.write("								&nbsp;\n");
      out.write("								<p>hp: ");
      out.print(TourSpotDto.getHp() );
      out.write("</p>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("					<div class='img-box'>\n");
      out.write("						<img alt=\"\" src=\"");
      out.print(root );
      out.write("/jeju/");
      out.print(TourSpotDto.getPhoto());
      out.write("\">\n");
      out.write("					</div>\n");
      out.write("					<div class=\"text-box\">\n");
      out.write("						<p>");
      out.print(TourSpotDto.getIntro() );
      out.write("</p>\n");
      out.write("					</div>\n");
      out.write("					<div class='tag-box'>\n");
      out.write("						<p>#");
      out.print(TourSpotDto.getArea() );
      out.write("</p>\n");
      out.write("						<p>#");
      out.print(TourSpotDto.getTheme() );
      out.write("</p>\n");
      out.write("						<p>#");
      out.print(TourSpotDto.getMain_cat() );
      out.write("</p>\n");
      out.write("						<p>#");
      out.print(TourSpotDto.getSub_cat() );
      out.write("</p>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		\n");
				}
				
      out.write("\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("		/* $('.slick').slick(); */\n");
      out.write("\n");
      out.write("		$(function() {\n");
      out.write("			$('.slick').slick({\n");
      out.write("				dots : false, // 하부 button, 누를 시 해당 사진으로 이동하는 버튼  \n");
      out.write("				infinite : false,\n");
      out.write("				speed : 300, // 움직이는 속도\n");
      out.write("				slidesToShow : 4, // 한페이지에 보여지는 사진 갯수\n");
      out.write("				slidesToScroll : 1, // 버튼 눌렀을 시에 넘어가는 사진 갯수\n");
      out.write("				arrow : false,\n");
      out.write("				prevArrow : \"<button type='button' class='slick-prev pull-left'></button>\",\n");
      out.write("				nextArrow : \"<button type='button' class='slick-next pull-right'></button>\"\n");
      out.write("			});\n");
      out.write("		\n");
      out.write("\n");
      out.write("		$(\".heartBtn\").click(function() {\n");
      out.write("			var name = $(this).attr(\"name\");\n");
      out.write("			var loginok=\"");
      out.print(loginok);
      out.write("\";\n");
      out.write("			alert(loginok);\n");
      out.write("			if(loginok==\"null\") {\n");
      out.write("				var confirmLogin = confirm(\"로그인이 필요한 페이지입니다. 로그인하시겠습니까?\");\n");
      out.write("				if (confirmLogin) {\n");
      out.write("					// 사용자가 확인을 클릭한 경우 로그인 페이지로 이동\n");
      out.write("					window.location.href = \"index.jsp?main=recomCourse/recomLoginForm.jsp?name=\"+name;\n");
      out.write("				} else {\n");
      out.write("					// 사용자가 취소를 클릭한 경우 현재 페이지에 머물도록 함\n");
      out.write("				}\n");
      out.write("			} else {\n");
      out.write("				if($(this).find(\".bi-heart\")){\n");
      out.write("					$(this).find(\"i\").removeClass(\"bi-heart\");\n");
      out.write("					$(this).find(\"i\").addClass(\"bi-heart-fill\");\n");
      out.write("				} else {\n");
      out.write("					$(this).find(\"i\").addClass(\"bi-heart\");\n");
      out.write("					$(this).find(\"i\").removeClass(\"bi-heart-fill\");\n");
      out.write("				}\n");
      out.write("				/* location.href=\"likesAjax.jsp?name=\"+name; */\n");
      out.write("			} \n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		});\n");
      out.write("		var previousClickedElement = null;\n");
      out.write("\n");
      out.write("		$(\"img.spotimg\").click(function() {\n");
      out.write("			var seq = $(this).attr(\"seq\");\n");
      out.write("			var num = $(this).attr(\"num\");\n");
      out.write("			\n");
      out.write("			 \n");
      out.write("				var currentClickedElement = $(this);\n");
      out.write("\n");
      out.write("				// 이전 클릭된 요소와 현재 클릭된 요소의 값을 비교\n");
      out.write("				if (previousClickedElement !== null && previousClickedElement[0] !== currentClickedElement[0]) {\n");
      out.write("				// 이전 클릭된 요소와 현재 클릭된 요소의 값이 다를 때 class 제거\n");
      out.write("				previousClickedElement.removeClass(\"img-boxclick\");\n");
      out.write("				}\n");
      out.write("\n");
      out.write("				// 현재 클릭된 요소에 class 추가\n");
      out.write("				currentClickedElement.addClass(\"img-boxclick\");\n");
      out.write("\n");
      out.write("				// 현재 클릭된 요소를 이전 클릭된 요소로 설정\n");
      out.write("				previousClickedElement = currentClickedElement;\n");
      out.write("				\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			/* $(this).parent().parent().find(\".image-box1\").addClass(\"img-boxclick\"); */\n");
      out.write("			// alert(seq);\n");
      out.write("			// alert(num);\n");
      out.write("\n");
      out.write("			$.ajax({\n");
      out.write("				type:\"post\",\n");
      out.write("				dataType:\"json\",\n");
      out.write("				url:\"");
      out.print(root);
      out.write("/recomCourse/detailAjax.jsp\",\n");
      out.write("				data:{\"seq\":seq,\"num\":num},\n");
      out.write("				success:function(data){\n");
      out.write("					// alert(data.seq);\n");
      out.write("					\n");
      out.write("					var s=\"<div class='title'>\";\n");
      out.write("					s+=\"<div>\";\n");
      out.write("					s+=\"<div class='tnum'>\";\n");
      out.write("					s+=\"<p>\"+data.num+\"</p>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("					s+=\"<p>\"+data.name+\"</p>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("					s+=\"<div>\";\n");
      out.write("					s+=\"<div class='taddr'>\";\n");
      out.write("					s+=\"<p>주소: \"+data.addr+\"</p>&nbsp;\";\n");
      out.write("					s+=\"<p>|</p>&nbsp;\";\n");
      out.write("					s+=\"<p>hp: \"+data.hp+\"</p>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("					s+=\"<div class='img-box'>\";\n");
      out.write("					s+=\"<img alt='' src='");
      out.print(root);
      out.write("/jeju/\"+data.photo+\"'>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("					s+=\"<div class='text-box'>\";\n");
      out.write("					s+=\"<p>\"+data.intro+\"</p>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("					s+=\"<div class='tag-box'>\";\n");
      out.write("					s+=\"<p>#\"+data.area+\"</p>\";\n");
      out.write("					s+=\"<p>#\"+data.theme+\"</p>\";\n");
      out.write("					s+=\"<p>#\"+data.main_cat+\"</p>\";\n");
      out.write("					s+=\"<p>#\"+data.sub_cat+\"</p>\";\n");
      out.write("					s+=\"</div>\";\n");
      out.write("\n");
      out.write("					$(\"#detailcontent\").html(s); \n");
      out.write("				}\n");
      out.write("\n");
      out.write("			});\n");
      out.write("\n");
      out.write("		});\n");
      out.write("\n");
      out.write("	</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
